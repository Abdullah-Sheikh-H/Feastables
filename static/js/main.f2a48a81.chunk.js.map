{"version":3,"sources":["Components/Cart/Checkout.module.css","Components/Cart/Cart.module.css","Components/Cart/CartItem.module.css","Components/Layout/HeaderCartButton.module.css","Components/UI/Modal.module.css","Components/Meals/AvailableMeals.module.css","Components/Meals/MealItem/MealItem.module.css","Components/Layout/Header.module.css","Components/UI/Card.module.css","Components/Meals/MealItem/MealItemForm.module.css","Components/UI/Input.module.css","Components/Meals/MealsSummary.module.css","store/cart-contex.js","Components/UI/Modal.js","Components/Cart/CartItem.js","Components/Cart/Checkout.js","Components/Cart/Cart.js","assets/meals.jpg","Components/Cart/CartIcon.js","Components/Layout/HeaderCartButton.js","Components/Layout/Header.js","Components/UI/Card.js","Components/UI/Input.js","Components/Meals/MealItem/MealItemForm.js","Components/Meals/MealItem/MealItem.js","Components/Meals/AvailableMeals.js","Components/Meals/MealsSummary.js","Components/Meals/Meals.js","store/CartProvider.js","App.js","index.js"],"names":["module","exports","CartContext","React","createContext","items","totalAmount","addItem","item","removeItem","id","clearCart","Backdrop","props","className","classes","backdrop","onClick","onClose","ModalOverlay","modal","content","children","portalElement","document","getElementById","Modal","ReactDOM","createPortal","CartItem","price","toFixed","name","summary","amount","actions","onRemove","onAdd","isEmpty","value","trim","Checkout","useState","street","postalCode","city","formInputsValidity","setFormInputsValidity","nameInputRef","useRef","streetInputRef","postalCodeInputRef","cityInputRef","nameControlClass","control","invalid","streetControlClass","postalCodeControlClass","cityControlClass","form","onSubmit","event","preventDefault","enteredName","current","enteredStreet","enteredPostalCode","enteredCity","enteredNameIsValid","enteredStreetIsValid","enteredPostalCodeIsValid","length","enteredCityIsValid","onConfirm","htmlFor","type","ref","Cart","cartCtx","useContext","isCheckout","setIsCheckout","isSubmitting","setIsSubmitting","didSubmit","setDidSubmit","submitError","setSubmitError","hasError","setHasError","hasItems","cartItemAddHandler","cartItemRemoveHandler","submitOrderHandler","userData","fetch","method","body","JSON","stringify","user","orderedIems","ok","Error","message","cartItem","styles","map","bind","modalAcion","button","checkoutButtons","submit","cartModalContent","total","onCancel","isSubmittingModalContent","didSubmitModalData","style","color","backgroundColor","submitErrorModalContent","CartIcon","xmlns","viewBox","fill","d","HeaderCartButton","btnIsHighlighted","setBtnIsHighlighted","numberOfCartItems","reduce","curNum","btnClasses","bump","useEffect","timer","setTimeout","clearTimeout","icon","badge","Header","header","onShowCart","src","mealsImage","alt","Card","card","Input","forwardRef","input","label","MealItemForm","amountEnteredRef","amountIsValid","setAmountIsValid","enteredAmount","enteredAmountNumber","onAddToCart","min","max","step","defaultValue","MealItem","meal","description","AvailableMeals","meals","setMeals","isLoading","setIsLoading","httpError","setHttpError","fetchMeals","response","json","key","responseData","loadedMeals","push","descripion","catch","error","Loading","MealsError","mealsList","MealsSummary","Meals","defaultCartState","cartReducer","state","action","updatedItem","updatedItems","updatedTotalAmount","existingCartItemIndex","findIndex","existingCartItem","concat","filter","CartProvider","useReducer","cartState","dispatchCartAction","cartContext","Provider","App","cartIsShown","setCartIsShown","render"],"mappings":"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","file":"static/js/main.f2a48a81.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Checkout_form__3h4YS\",\"control\":\"Checkout_control__32CvD\",\"actions\":\"Checkout_actions__2afo3\",\"submit\":\"Checkout_submit__19Tq5\",\"invalid\":\"Checkout_invalid__2kQoi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-items\":\"Cart_cart-items__3YOg1\",\"total\":\"Cart_total__3l5ax\",\"actions\":\"Cart_actions__1HnJk\",\"button--alt\":\"Cart_button--alt__3Juix\",\"button\":\"Cart_button__1hOUQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-item\":\"CartItem_cart-item__35fic\",\"summary\":\"CartItem_summary__3sRwz\",\"price\":\"CartItem_price__2Yiyr\",\"amount\":\"CartItem_amount__1eZuE\",\"actions\":\"CartItem_actions__3aVOo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"HeaderCartButton_button__K5buo\",\"icon\":\"HeaderCartButton_icon__3ewvM\",\"badge\":\"HeaderCartButton_badge__aOX2E\",\"bump\":\"HeaderCartButton_bump__w8oL8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__1ulGq\",\"modal\":\"Modal_modal__BsAKE\",\"slide-down\":\"Modal_slide-down__2YbrX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"meals\":\"AvailableMeals_meals__o_WTD\",\"meals-appear\":\"AvailableMeals_meals-appear__peZQx\",\"MealsError\":\"AvailableMeals_MealsError__2GWOn\",\"Loading\":\"AvailableMeals_Loading__1jTHV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"meal\":\"MealItem_meal__24iwT\",\"description\":\"MealItem_description__adc3b\",\"price\":\"MealItem_price__cyyWP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3-Y9_\",\"main-image\":\"Header_main-image__1vkQv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__QB9ip\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"MealItemForm_form__34zMA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__1hySe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"summary\":\"MealsSummary_summary__3yHmA\"};","import React from \"react\"\r\n\r\nconst CartContext = React.createContext({\r\n    items: [],\r\n    totalAmount: 0,\r\n    addItem: (item) => {},\r\n    removeItem: (id) => {},\r\n    clearCart: () => {},\r\n})\r\n\r\nexport default CartContext\r\n","import { Fragment } from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\n\r\nimport classes from \"./Modal.module.css\"\r\n\r\nconst Backdrop = (props) => {\r\n    return <div className={classes.backdrop} onClick={props.onClose} />\r\n}\r\n\r\nconst ModalOverlay = (props) => {\r\n    return (\r\n        <div className={classes.modal}>\r\n            <div className={classes.content}>{props.children}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst portalElement = document.getElementById(\"overlays\")\r\n\r\nconst Modal = (props) => {\r\n    return (\r\n        <Fragment>\r\n            {ReactDOM.createPortal(\r\n                <Backdrop onClose={props.onClose} />,\r\n                portalElement\r\n            )}\r\n            {ReactDOM.createPortal(\r\n                <ModalOverlay>{props.children}</ModalOverlay>,\r\n                portalElement\r\n            )}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Modal\r\n","import classes from './CartItem.module.css';\n\nconst CartItem = (props) => {\n  const price = `$${props.price.toFixed(2)}`;\n\n  return (\n    <li className={classes['cart-item']}>\n      <div>\n        <h2>{props.name}</h2>\n        <div className={classes.summary}>\n          <span className={classes.price}>{price}</span>\n          <span className={classes.amount}>x {props.amount}</span>\n        </div>\n      </div>\n      <div className={classes.actions}>\n        <button onClick={props.onRemove}>−</button>\n        <button onClick={props.onAdd}>+</button>\n      </div>\n    </li>\n  );\n};\n\nexport default CartItem;\n","import { useRef, useState } from \"react\"\r\nimport classes from \"./Checkout.module.css\"\r\n\r\nconst isEmpty = (value) => value.trim() === \"\"\r\nconst isFiveChars = (value) => value.trim().length === 5\r\n\r\nconst Checkout = (props) => {\r\n    const [formInputsValidity, setFormInputsValidity] = useState({\r\n        name: true,\r\n        street: true,\r\n        postalCode: true,\r\n        city: true,\r\n    })\r\n    const nameInputRef = useRef()\r\n    const streetInputRef = useRef()\r\n    const postalCodeInputRef = useRef()\r\n    const cityInputRef = useRef()\r\n\r\n    const confirmHandler = (event) => {\r\n        event.preventDefault()\r\n\r\n        const enteredName = nameInputRef.current.value\r\n        const enteredStreet = streetInputRef.current.value\r\n        const enteredPostalCode = postalCodeInputRef.current.value\r\n        const enteredCity = cityInputRef.current.value\r\n\r\n        const enteredNameIsValid = !isEmpty(enteredName)\r\n        const enteredStreetIsValid = !isEmpty(enteredStreet)\r\n        const enteredPostalCodeIsValid = isFiveChars(enteredPostalCode)\r\n        const enteredCityIsValid = !isEmpty(enteredCity)\r\n\r\n        setFormInputsValidity({\r\n            name: enteredNameIsValid,\r\n            street: enteredStreetIsValid,\r\n            postalCode: enteredPostalCodeIsValid,\r\n            city: enteredCityIsValid,\r\n        })\r\n\r\n        let formIsValid =\r\n            enteredNameIsValid &&\r\n            enteredStreetIsValid &&\r\n            enteredPostalCodeIsValid &&\r\n            enteredCityIsValid\r\n\r\n        if (!formIsValid) {\r\n            return\r\n        }\r\n\r\n        props.onConfirm({\r\n            name: enteredName,\r\n            street: enteredStreet,\r\n            postalCode: enteredPostalCode,\r\n            city: enteredCity,\r\n        })\r\n    }\r\n\r\n    const nameControlClass = `${classes.control} ${\r\n        formInputsValidity.name ? \"\" : classes.invalid\r\n    } `\r\n\r\n    const streetControlClass = `${classes.control} ${\r\n        formInputsValidity.street ? \"\" : classes.invalid\r\n    } `\r\n\r\n    const postalCodeControlClass = `${classes.control} ${\r\n        formInputsValidity.postalCode ? \"\" : classes.invalid\r\n    } `\r\n\r\n    const cityControlClass = `${classes.control} ${\r\n        formInputsValidity.city ? \"\" : classes.invalid\r\n    } `\r\n\r\n    return (\r\n        <form className={classes.form} id=\"141\" onSubmit={confirmHandler}>\r\n            <div className={nameControlClass}>\r\n                <label htmlFor=\"name\">Your Name</label>\r\n                <input type=\"text\" id=\"name\" ref={nameInputRef} />\r\n                {!formInputsValidity.name && <p>Please enter a valid Name!</p>}\r\n            </div>\r\n            <div className={streetControlClass}>\r\n                <label htmlFor=\"street\">Street</label>\r\n                <input type=\"text\" id=\"street\" ref={streetInputRef} />\r\n                {!formInputsValidity.street && (\r\n                    <p>Please enter a valid Street!</p>\r\n                )}\r\n            </div>\r\n            <div className={postalCodeControlClass}>\r\n                <label htmlFor=\"postal\">Postal Code</label>\r\n                <input type=\"text\" id=\"postal\" ref={postalCodeInputRef} />\r\n                {!formInputsValidity.postalCode && (\r\n                    <p>\r\n                        Please enter a valid Postal Code (5 Characters Long!)!\r\n                    </p>\r\n                )}\r\n            </div>\r\n            <div className={cityControlClass}>\r\n                <label htmlFor=\"city\">City</label>\r\n                <input type=\"text\" id=\"city\" ref={cityInputRef} />\r\n                {!formInputsValidity.city && <p>Please enter a valid City!</p>}\r\n            </div>\r\n            {/* <div className={classes.actions}>\r\n                <button type=\"button\" onClick={props.onCancel}>\r\n                    Cancel\r\n                </button>\r\n                <button className={classes.submit}>Confirm</button>\r\n            </div> */}\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Checkout\r\n","import { Fragment, useContext, useState } from \"react\"\r\nimport CartContext from \"../../store/cart-contex\"\r\nimport Modal from \"../UI/Modal\"\r\nimport styles from \"./Cart.module.css\"\r\nimport CartItem from \"./CartItem\"\r\nimport Checkout from \"./Checkout\"\r\nimport classes from \"./Checkout.module.css\"\r\n\r\nconst Cart = (props) => {\r\n    const cartCtx = useContext(CartContext)\r\n    const [isCheckout, setIsCheckout] = useState(false)\r\n    const [isSubmitting, setIsSubmitting] = useState(false)\r\n    const [didSubmit, setDidSubmit] = useState(false)\r\n    const [submitError, setSubmitError] = useState(null)\r\n    const [hasError, setHasError] = useState(false)\r\n    const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`\r\n    const hasItems = cartCtx.items.length > 0\r\n\r\n    const cartItemAddHandler = (item) => {\r\n        cartCtx.addItem({ ...item, amount: 1 })\r\n    }\r\n\r\n    const cartItemRemoveHandler = (id) => {\r\n        cartCtx.removeItem(id)\r\n    }\r\n\r\n    const orderHandler = () => {\r\n        setIsCheckout(true)\r\n    }\r\n\r\n    const submitOrderHandler = async (userData) => {\r\n        setIsSubmitting(true)\r\n        try {\r\n            const response = await fetch(\r\n                \"https://http-react-2a43d-default-rtdb.asia-southeast1.firebasedatabase.app/orders.json\",\r\n                {\r\n                    method: \"POST\",\r\n                    body: JSON.stringify({\r\n                        user: userData,\r\n                        orderedIems: cartCtx.items,\r\n                    }),\r\n                }\r\n            )\r\n\r\n            if (!response.ok) {\r\n                throw new Error(\r\n                    \"Something Went Wrong. Please Check Your Internet Connection!\"\r\n                )\r\n            }\r\n            setIsSubmitting(false)\r\n            setDidSubmit(true)\r\n            cartCtx.clearCart()\r\n        } catch (error) {\r\n            setIsSubmitting(false)\r\n            setHasError(true)\r\n            setSubmitError(error.message)\r\n        }\r\n    }\r\n\r\n    const cartItem = (\r\n        <ul className={styles[\"cart-items\"]}>\r\n            {cartCtx.items.map((item) => (\r\n                <CartItem\r\n                    key={item.id}\r\n                    name={item.name}\r\n                    amount={item.amount}\r\n                    price={item.price}\r\n                    onRemove={cartItemRemoveHandler.bind(null, item.id)}\r\n                    onAdd={cartItemAddHandler.bind(null, item)}\r\n                />\r\n            ))}\r\n        </ul>\r\n    )\r\n\r\n    const modalAcion = (\r\n        <div className={styles.actions}>\r\n            <button className={styles[\"button--alt\"]} onClick={props.onClose}>\r\n                Close\r\n            </button>\r\n            {hasItems && (\r\n                <button className={styles.button} onClick={orderHandler}>\r\n                    Order\r\n                </button>\r\n            )}\r\n        </div>\r\n    )\r\n\r\n    const checkoutButtons = (\r\n        <div className={classes.actions}>\r\n            <button type=\"button\" onClick={props.onClose}>\r\n                Cancel\r\n            </button>\r\n            <button className={classes.submit} type=\"submit\" form=\"141\">\r\n                Confirm\r\n            </button>\r\n        </div>\r\n    )\r\n\r\n    const cartModalContent = (\r\n        <Fragment>\r\n            {cartItem}\r\n            <div className={styles.total}>\r\n                <span>Total Amount</span>\r\n                <span>{totalAmount}</span>\r\n            </div>\r\n            {isCheckout && (\r\n                <Checkout\r\n                    onConfirm={submitOrderHandler}\r\n                    onCancel={props.onClose}\r\n                />\r\n            )}\r\n            {!isCheckout && modalAcion}\r\n            {isCheckout && checkoutButtons}\r\n        </Fragment>\r\n    )\r\n\r\n    const isSubmittingModalContent = <p>Sending Order Data...</p>\r\n\r\n    const didSubmitModalData = (\r\n        <Fragment>\r\n            <p style={{ color: \"green\" }}>Successfully Submited the Order!</p>\r\n            <div className={styles.actions}>\r\n                <button\r\n                    className={styles[\"button\"]}\r\n                    style={{ backgroundColor: \"green\" }}\r\n                    onClick={props.onClose}\r\n                >\r\n                    Close\r\n                </button>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n\r\n    const submitErrorModalContent = (\r\n        <Fragment>\r\n            <p style={{ color: \"red\" }}>{submitError}</p>\r\n            <div className={styles.actions}>\r\n                <button className={styles[\"button\"]} onClick={props.onClose}>\r\n                    Close\r\n                </button>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n\r\n    return (\r\n        <Modal onClose={props.onClose}>\r\n            {!isSubmitting && !didSubmit && cartModalContent}\r\n            {isSubmitting && isSubmittingModalContent}\r\n            {!isSubmitting && didSubmit && didSubmitModalData}\r\n            {hasError && submitErrorModalContent}\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default Cart\r\n","export default __webpack_public_path__ + \"static/media/meals.2971f633.jpg\";","const CartIcon = () => {\r\n    return (\r\n        <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 20 20\"\r\n            fill=\"currentColor\"\r\n        >\r\n            <path d=\"M3 1a1 1 0 000 2h1.22l.305 1.222a.997.997 0 00.01.042l1.358 5.43-.893.892C3.74 11.846 4.632 14 6.414 14H15a1 1 0 000-2H6.414l1-1H14a1 1 0 00.894-.553l3-6A1 1 0 0017 3H6.28l-.31-1.243A1 1 0 005 1H3zM16 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM6.5 18a1.5 1.5 0 100-3 1.5 1.5 0 000 3z\" />\r\n        </svg>\r\n    );\r\n};\r\n\r\nexport default CartIcon;\r\n","import styles from \"./HeaderCartButton.module.css\"\r\nimport CartIcon from \"../Cart/CartIcon\"\r\nimport { useContext, useEffect, useState } from \"react\"\r\nimport CartContext from \"../../store/cart-contex\"\r\n\r\nconst HeaderCartButton = (props) => {\r\n    const cartCtx = useContext(CartContext)\r\n    const { items } = cartCtx\r\n    const [btnIsHighlighted, setBtnIsHighlighted] = useState(false)\r\n\r\n    const numberOfCartItems = cartCtx.items.reduce((curNum, item) => {\r\n        return curNum + item.amount\r\n    }, 0)\r\n\r\n    const btnClasses = `${styles.button} ${btnIsHighlighted ? styles.bump : \"\"}`\r\n\r\n    useEffect(() => {\r\n        if (items.length === 0) {\r\n            return\r\n        }\r\n        setBtnIsHighlighted(true)\r\n\r\n        const timer = setTimeout(() => {\r\n            setBtnIsHighlighted(false)\r\n        }, 300)\r\n\r\n        return () => {\r\n            clearTimeout(timer)\r\n        }\r\n    }, [items])\r\n\r\n    return (\r\n        <button className={btnClasses} onClick={props.onClick}>\r\n            <span className={styles.icon}>\r\n                <CartIcon />\r\n            </span>\r\n            <span>Your Cart</span>\r\n            <span className={styles.badge}>{numberOfCartItems}</span>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default HeaderCartButton\r\n","import styles from \"./Header.module.css\"\r\nimport { Fragment } from \"react\"\r\nimport mealsImage from \"../../assets/meals.jpg\"\r\nimport HeaderCartButton from \"./HeaderCartButton\"\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <Fragment>\r\n            <header className={styles.header}>\r\n                <div>\r\n                    <h1>Feastables</h1>\r\n                </div>\r\n                <div>\r\n                    <HeaderCartButton onClick={props.onShowCart} />\r\n                </div>\r\n            </header>\r\n            <div className={styles[\"main-image\"]}>\r\n                <img src={mealsImage} alt=\"A table full of Delicious Meals\" />\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import styles from \"./Card.module.css\";\r\n\r\nconst Card = (props) => {\r\n    return <div className={styles.card}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\"\r\nimport styles from \"./Input.module.css\"\r\n\r\nconst Input = React.forwardRef((props, ref) => {\r\n    return (\r\n        <div className={styles.input}>\r\n            <label htmlFor={props.input.id}>{props.label}</label>\r\n            <input ref={ref} {...props.input} />\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default Input\r\n","import styles from \"./MealItemForm.module.css\"\r\nimport Input from \"../../UI/Input\"\r\nimport { useRef, useState } from \"react\"\r\n\r\nconst MealItemForm = (props) => {\r\n    const amountEnteredRef = useRef()\r\n    const [amountIsValid, setAmountIsValid] = useState(true)\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault()\r\n        const enteredAmount = amountEnteredRef.current.value\r\n        const enteredAmountNumber = +enteredAmount\r\n\r\n        if (\r\n            enteredAmount.trim().length === 0 ||\r\n            enteredAmountNumber < 1 ||\r\n            enteredAmountNumber > 5\r\n        ) {\r\n            return setAmountIsValid(false)\r\n        }\r\n\r\n        props.onAddToCart(enteredAmountNumber)\r\n    }\r\n\r\n    return (\r\n        <form className={styles.form} onSubmit={submitHandler}>\r\n            <Input\r\n                ref={amountEnteredRef}\r\n                label=\"Amount\"\r\n                input={{\r\n                    id: \"amount_\" + props.id,\r\n                    type: \"number\",\r\n                    min: \"1\",\r\n                    max: \"5\",\r\n                    step: \"1\",\r\n                    defaultValue: \"1\",\r\n                }}\r\n            />\r\n            <button>+ Add</button>\r\n            {!amountIsValid && <p>Please enter a valid amount (1-5).</p>}\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default MealItemForm\r\n","import { useContext } from \"react\"\r\nimport CartContext from \"../../../store/cart-contex\"\r\nimport styles from \"./MealItem.module.css\"\r\nimport MealItemForm from \"./MealItemForm\"\r\n\r\nconst MealItem = (props) => {\r\n    const price = `$${props.price.toFixed(2)}`\r\n\r\n    const cartCtx = useContext(CartContext)\r\n\r\n    const addToCartHandler = (amount) => {\r\n        cartCtx.addItem({\r\n            id: props.id,\r\n            name: props.name,\r\n            amount: amount,\r\n            price: props.price,\r\n        })\r\n    }\r\n\r\n    return (\r\n        <li className={styles.meal}>\r\n            <div>\r\n                <h3>{props.name}</h3>\r\n                <div className={styles.description}>{props.description}</div>\r\n                <div className={styles.price}>{price}</div>\r\n            </div>\r\n            <div>\r\n                <MealItemForm id={props.id} onAddToCart={addToCartHandler} />\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default MealItem\r\n","import classes from \"./AvailableMeals.module.css\"\r\nimport Card from \"../UI/Card\"\r\nimport MealItem from \"./MealItem/MealItem\"\r\nimport { useEffect, useState } from \"react\"\r\n\r\n// const DUMMY_MEALS = [\r\n//     {\r\n//         id: \"m1\",\r\n//         name: \"Sushi\",\r\n//         description: \"Finest fish and veggies\",\r\n//         price: 22.99,\r\n//     },\r\n//     {\r\n//         id: \"m2\",\r\n//         name: \"Schnitzel\",\r\n//         description: \"A german specialty!\",\r\n//         price: 16.5,\r\n//     },\r\n//     {\r\n//         id: \"m3\",\r\n//         name: \"Barbecue Burger\",\r\n//         description: \"American, raw, meaty\",\r\n//         price: 12.99,\r\n//     },\r\n//     {\r\n//         id: \"m4\",\r\n//         name: \"Green Bowl\",\r\n//         description: \"Healthy...and green...\",\r\n//         price: 18.99,\r\n//     },\r\n// ];\r\n\r\nconst AvailableMeals = () => {\r\n    const [meals, setMeals] = useState([])\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [httpError, setHttpError] = useState(null)\r\n\r\n    useEffect(() => {\r\n        const fetchMeals = async () => {\r\n            const response = await fetch(\r\n                \"https://http-react-2a43d-default-rtdb.asia-southeast1.firebasedatabase.app/meals.json\"\r\n            )\r\n\r\n            if (!response.ok) {\r\n                throw new Error(\"Something Went Wrong!\")\r\n            }\r\n\r\n            const responseData = await response.json()\r\n            const loadedMeals = []\r\n\r\n            for (const key in responseData) {\r\n                loadedMeals.push({\r\n                    id: key,\r\n                    name: responseData[key].name,\r\n                    descripion: responseData[key].description,\r\n                    price: responseData[key].price,\r\n                })\r\n            }\r\n            setMeals(loadedMeals)\r\n            setIsLoading(false)\r\n        }\r\n\r\n        fetchMeals().catch((error) => {\r\n            setIsLoading(false)\r\n            setHttpError(error.message)\r\n        })\r\n    }, [])\r\n\r\n    if (isLoading) {\r\n        return (\r\n            <section className={classes.Loading}>\r\n                <p>Loading...</p>\r\n            </section>\r\n        )\r\n    }\r\n\r\n    if (httpError) {\r\n        return (\r\n            <section className={classes.MealsError}>\r\n                <p>{httpError}</p>\r\n            </section>\r\n        )\r\n    }\r\n\r\n    const mealsList = meals.map((meal) => (\r\n        <MealItem\r\n            id={meal.id}\r\n            key={meal.id}\r\n            name={meal.name}\r\n            description={meal.description}\r\n            price={meal.price}\r\n        />\r\n    ))\r\n\r\n    return (\r\n        <section className={classes.meals}>\r\n            <Card>\r\n                <ul>{mealsList}</ul>\r\n            </Card>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default AvailableMeals\r\n","import styles from \"./MealsSummary.module.css\";\r\n\r\nconst MealsSummary = () => {\r\n    return (\r\n        <section className={styles.summary}>\r\n            <h2>Delicious Food, Delivered To You</h2>\r\n            <p>\r\n                Choose your favorite meal from our broad selection of available\r\n                meals and enjoy a delicious lunch or dinner at home.\r\n            </p>\r\n            <p>\r\n                All our meals are cooked with high-quality ingredients,\r\n                just-in-time and of course by experienced chefs!\r\n            </p>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default MealsSummary;\r\n","import { Fragment } from \"react\";\r\nimport AvailableMeals from \"./AvailableMeals\";\r\nimport MealsSummary from \"./MealsSummary\";\r\n\r\nconst Meals = () => {\r\n    return (\r\n        <Fragment>\r\n            <MealsSummary />\r\n            <AvailableMeals />\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Meals;\r\n","import { useReducer } from \"react\"\r\nimport CartContext from \"./cart-contex\"\r\n\r\nconst defaultCartState = {\r\n    items: [],\r\n    totalAmount: 0,\r\n}\r\n\r\nconst cartReducer = (state, action) => {\r\n    if (action.type === \"ADD\") {\r\n        const updatedTotalAmount =\r\n            state.totalAmount + action.item.price * action.item.amount\r\n\r\n        const existingCartItemIndex = state.items.findIndex(\r\n            (item) => item.id === action.item.id\r\n        )\r\n        const existingCartItem = state.items[existingCartItemIndex]\r\n\r\n        let updatedItem\r\n        let updatedItems\r\n\r\n        if (existingCartItem) {\r\n            updatedItem = {\r\n                ...existingCartItem,\r\n                amount: existingCartItem.amount + action.item.amount,\r\n            }\r\n\r\n            updatedItems = [...state.items]\r\n            updatedItems[existingCartItemIndex] = updatedItem\r\n        } else {\r\n            updatedItem = { ...action.item }\r\n            updatedItems = state.items.concat(updatedItem)\r\n        }\r\n        return {\r\n            items: updatedItems,\r\n            totalAmount: updatedTotalAmount,\r\n        }\r\n    }\r\n\r\n    if (action.type === \"REMOVE\") {\r\n        const existingCartItemIndex = state.items.findIndex(\r\n            (item) => item.id === action.id\r\n        )\r\n        const existingCartItem = state.items[existingCartItemIndex]\r\n        const updatedTotalAmount = state.totalAmount - existingCartItem.price\r\n\r\n        let updatedItems\r\n        if (existingCartItem.amount === 1) {\r\n            updatedItems = state.items.filter((item) => item.id !== action.id)\r\n        } else {\r\n            const updatedItem = {\r\n                ...existingCartItem,\r\n                amount: existingCartItem.amount - 1,\r\n            }\r\n            updatedItems = [...state.items]\r\n            updatedItems[existingCartItemIndex] = updatedItem\r\n        }\r\n\r\n        return {\r\n            items: updatedItems,\r\n            totalAmount: updatedTotalAmount,\r\n        }\r\n    }\r\n\r\n    if (action.type === \"CLEAR\") {\r\n        return defaultCartState\r\n    }\r\n\r\n    return defaultCartState\r\n}\r\n\r\nconst CartProvider = (props) => {\r\n    const [cartState, dispatchCartAction] = useReducer(\r\n        cartReducer,\r\n        defaultCartState\r\n    )\r\n\r\n    const addItemToCartHandler = (item) => {\r\n        dispatchCartAction({ type: \"ADD\", item: item })\r\n    }\r\n\r\n    const removeItemFromCartHandler = (id) => {\r\n        dispatchCartAction({ type: \"REMOVE\", id: id })\r\n    }\r\n\r\n    const clearCartHandler = () => {\r\n        dispatchCartAction({ type: \"CLEAR\" })\r\n    }\r\n\r\n    const cartContext = {\r\n        items: cartState.items,\r\n        totalAmount: cartState.totalAmount,\r\n        addItem: addItemToCartHandler,\r\n        removeItem: removeItemFromCartHandler,\r\n        clearCart: clearCartHandler,\r\n    }\r\n\r\n    return (\r\n        <CartContext.Provider value={cartContext}>\r\n            {props.children}\r\n        </CartContext.Provider>\r\n    )\r\n}\r\n\r\nexport default CartProvider\r\n","import { useState } from \"react\"\nimport Cart from \"./Components/Cart/Cart\"\nimport Header from \"./Components/Layout/Header\"\nimport Meals from \"./Components/Meals/Meals\"\nimport CartProvider from \"./store/CartProvider\"\n\nfunction App() {\n    const [cartIsShown, setCartIsShown] = useState(false)\n\n    const showCartHandler = () => {\n        setCartIsShown(true)\n    }\n\n    const hideCartHandler = () => {\n        setCartIsShown(false)\n    }\n\n    return (\n        <CartProvider>\n            {cartIsShown && <Cart onClose={hideCartHandler} />}\n            <Header onShowCart={showCartHandler} />\n            <main>\n                <Meals />\n            </main>\n        </CartProvider>\n    )\n}\n\nexport default App\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}